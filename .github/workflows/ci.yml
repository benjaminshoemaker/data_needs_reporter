name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.2.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache virtualenv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-${{ matrix.python-version }}-

      - name: Install dependencies
        run: poetry install --with dev --no-interaction --no-ansi

      - name: Run tests with coverage (Deprecations as errors)
        env:
          PYTHONWARNINGS: >-
            ignore:Passing a BlockManager to DataFrame is deprecated:DeprecationWarning:pandas.core.frame,
            error::DeprecationWarning,
            error::PendingDeprecationWarning
        run: poetry run pytest --cov=dnr_synth --cov-report=xml --cov-report=term -q

      - name: Upload coverage XML
        if: matrix.python-version == '3.11'
        uses: actions/upload-artifact@v4
        with:
            name: coverage-xml
            path: coverage.xml
